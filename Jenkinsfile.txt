pipeline 
{
  agent any
  stages {
           stage('Checkout') {
                               steps {
                                      echo 'In checkout2'
                                     }
                             }

           stage('Build')    {
                               steps {
                                      echo 'In build'
                                      withMaven( maven: 'Maven12') 
                                     {
                                      bat 'mvn clean compile'
                                     }
                                     
				      
                                     }
                             }

           stage('Unit testing')    {
                               steps {
                                      echo 'In Unit testing'
                                      withMaven( maven: 'Maven12') 
                                     {
                                      bat 'mvn test-compile test'
                                     }
                                     }
                             }

           stage('Sonar Analysis')    {
                               steps {
                                      echo 'In Sonar Analysis'
				      withSonarQubeEnv('MySonar-Server')
				      {
				      bat 'mvn org.sonarsource.scanner.maven:sonar-maven-plugin:3.2:sonar'
 				      }
                                     }
                             }
           stage('Quality gate check') { 
	                                timeout(time:1, unit = 'Hours')
					{  
					   def gg = waitForQualityGate()
					   if (gg.status != 'OK')
					     { error 'Pipeline aborted due to failure : ${gg.status}'
					     }
					
					}
	   
	                               }

           stage('Release App Artifactory')    {
                               steps {
                                      echo 'In Release App Artifactory'
                                     }
                             }

           stage('Build Docker Image')    {
                               steps {
                                      echo 'In Build Docker Image'
                                     }
                             }

           stage('ECS Deployment')    {
                               steps {
                                      echo 'In ECS Deployment'
                                     }
                             }

           stage('Open Needed Ports')    {
                               steps {
                                      echo 'Open Needed Ports'
                                     }
                             }
     
                             
         }
}
